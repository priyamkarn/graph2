void dijkstra(int start) {
    memset(dist, 0x3f, sizeof(dist));
    memset(visited, false, sizeof(visited));
    priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> pq;

    dist[start] = 0;
    pq.push({0, start});

    while (!pq.empty()) {
        int cur = pq.top().second;
        pq.pop();

        if (visited[cur]) {
            continue;
        }

        visited[cur] = true;

        for (int i = 0; i < adj[cur].size(); i++) {
            int next = adj[cur][i].first, w = adj[cur][i].second;

            if (dist[next] > dist[cur] + w) {
                dist[next] = dist[cur] + w;
                pq.push({dist[next], next});
            }
        }
    }
}
