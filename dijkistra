 vector <int> dijkstra(int V, vector<vector<int>> adj[], int s)
    {
        // Code here
        vector<int>vis(V,0);
        vector<int>dis(V,INT_MAX);
        priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>>pq;
        dis[s]=0;
        pq.push({0,s});
        while(!pq.empty())
        {
            int node=pq.top().second;
              int distance = pq.top().first;
            pq.pop();
            if(vis[node]==1)
            {
                continue;
            }
            vis[node]=1;
            for(auto ele:adj[node])
            {
                int adj_node = ele[0];
                int weight = ele[1];
                if(dis[adj_node] > weight + distance)
                {
                    dis[adj_node] = weight + distance;
                    pq.push({dis[adj_node],adj_node});
                }
            }
        }
        return dis;
    }
